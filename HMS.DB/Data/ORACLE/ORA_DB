--------------------------------------------------------
--  File created - Sunday-November-05-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence BUILDING_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."BUILDING_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUILDING_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."BUILDING_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BUILDING_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."BUILDING_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COLLAGES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."COLLAGES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HALLS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."HALLS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ISEQ$$_78636
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."ISEQ$$_78636"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ISEQ$$_78639
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."ISEQ$$_78639"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ISEQ$$_78642
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."ISEQ$$_78642"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ISEQ$$_78929
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."ISEQ$$_78929"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERMISSIONS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."PERMISSIONS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RESERVATIONS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."RESERVATIONS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 161 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ROLEPERMISSION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."ROLEPERMISSION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SITEROLE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."SITEROLE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SITEUSER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."SITEUSER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SITEUSER_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "MOHAMMED"."SITEUSER_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table BUILDING
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."BUILDING" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"BUILDING_NUMBER" NUMBER, 
	"COLLEGE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table COLLAGES
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."COLLAGES" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"CODE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HALLS
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."HALLS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"HALL_NUMBER" NUMBER, 
	"BUILDING_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PERMISSIONS
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."PERMISSIONS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RESERVATIONS
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."RESERVATIONS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"HALL_ID" NUMBER, 
	"RESERVATION_DATE" DATE, 
	"TIME_START" DATE, 
	"TIME_END" DATE, 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ROLEPERMISSION
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."ROLEPERMISSION" 
   (	"ID" NUMBER, 
	"ROLEID" NUMBER, 
	"PERMISSIONID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SITEROLE
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."SITEROLE" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(200 BYTE), 
	"NORMALIZEDNAME" VARCHAR2(200 BYTE), 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"CREATED" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SITEUSER
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."SITEUSER" 
   (	"ID" NUMBER, 
	"USERNAME" VARCHAR2(200 BYTE), 
	"FORENAME" VARCHAR2(200 BYTE), 
	"SURNAME" VARCHAR2(200 BYTE), 
	"NORMALIZEDUSERNAME" VARCHAR2(200 BYTE), 
	"EMAIL" VARCHAR2(200 BYTE), 
	"NORMALIZEDEMAIL" VARCHAR2(200 BYTE), 
	"EMAILCONFIRMED" VARCHAR2(5 BYTE), 
	"PASSWORDHASH" VARCHAR2(200 BYTE), 
	"PHONENUMBER" VARCHAR2(200 BYTE), 
	"PHONENUMBERCONFIRMED" VARCHAR2(5 BYTE), 
	"TWOFACTORENABLED" VARCHAR2(5 BYTE), 
	"CREATED" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SITEUSERROLE
--------------------------------------------------------

  CREATE TABLE "MOHAMMED"."SITEUSERROLE" 
   (	"USERID" NUMBER, 
	"ROLEID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into MOHAMMED.BUILDING
SET DEFINE OFF;
Insert into MOHAMMED.BUILDING (ID,NAME,BUILDING_NUMBER,COLLEGE_ID) values (2,'b1',11,43);
REM INSERTING into MOHAMMED.COLLAGES
SET DEFINE OFF;
Insert into MOHAMMED.COLLAGES (ID,NAME,CODE) values (43,'ww',112);
REM INSERTING into MOHAMMED.HALLS
SET DEFINE OFF;
Insert into MOHAMMED.HALLS (ID,NAME,HALL_NUMBER,BUILDING_ID) values (3,'h1',4425,2);
Insert into MOHAMMED.HALLS (ID,NAME,HALL_NUMBER,BUILDING_ID) values (21,'w',3231,2);
REM INSERTING into MOHAMMED.PERMISSIONS
SET DEFINE OFF;
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (1,'halls-Read');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (2,'halls-Create');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (3,'halls-Update');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (4,'halls-Delete');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (5,'reservations-Read');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (6,'reservations-Create');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (7,'reservations-Update');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (8,'reservations-Delete');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (9,'buildings-Read');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (10,'buildings-Create');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (11,'buildings-Update');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (12,'buildings-Delete');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (13,'colleges-Read');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (14,'colleges-Create');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (15,'colleges-Update');
Insert into MOHAMMED.PERMISSIONS (ID,NAME) values (16,'colleges-Delete');
REM INSERTING into MOHAMMED.RESERVATIONS
SET DEFINE OFF;
Insert into MOHAMMED.RESERVATIONS (ID,NAME,HALL_ID,RESERVATION_DATE,TIME_START,TIME_END,USER_ID) values (144,'sdfad',3,to_date('26-OCT-23','DD-MON-RR'),to_date('26-OCT-23','DD-MON-RR'),to_date('26-OCT-23','DD-MON-RR'),41);
Insert into MOHAMMED.RESERVATIONS (ID,NAME,HALL_ID,RESERVATION_DATE,TIME_START,TIME_END,USER_ID) values (145,'saffdasd',3,to_date('27-OCT-23','DD-MON-RR'),to_date('26-OCT-23','DD-MON-RR'),to_date('26-OCT-23','DD-MON-RR'),41);
Insert into MOHAMMED.RESERVATIONS (ID,NAME,HALL_ID,RESERVATION_DATE,TIME_START,TIME_END,USER_ID) values (146,'dsafd',3,to_date('29-OCT-23','DD-MON-RR'),to_date('29-OCT-23','DD-MON-RR'),to_date('29-OCT-23','DD-MON-RR'),41);
REM INSERTING into MOHAMMED.ROLEPERMISSION
SET DEFINE OFF;
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (83,2,3);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (84,2,4);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (85,2,5);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (86,2,6);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (87,2,7);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (88,2,8);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (89,2,9);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (90,2,10);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (91,2,11);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (81,2,1);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (82,2,2);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (92,2,12);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (93,2,13);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (94,2,14);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (95,2,15);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (96,2,16);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (101,3,5);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (108,21,3);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (109,21,4);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (110,21,5);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (111,21,6);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (106,21,1);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (107,21,2);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (112,21,7);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (113,21,8);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (114,21,9);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (115,21,10);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (116,21,11);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (117,21,12);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (118,21,13);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (119,21,14);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (120,21,15);
Insert into MOHAMMED.ROLEPERMISSION (ID,ROLEID,PERMISSIONID) values (121,21,16);
REM INSERTING into MOHAMMED.SITEROLE
SET DEFINE OFF;
Insert into MOHAMMED.SITEROLE (ID,NAME,NORMALIZEDNAME,DESCRIPTION,CREATED) values (41,'user','user','user in the system ',null);
Insert into MOHAMMED.SITEROLE (ID,NAME,NORMALIZEDNAME,DESCRIPTION,CREATED) values (21,'super_admin','super_admin','the admiration of the system ',to_date('29-OCT-23','DD-MON-RR'));
REM INSERTING into MOHAMMED.SITEUSER
SET DEFINE OFF;
Insert into MOHAMMED.SITEUSER (ID,USERNAME,FORENAME,SURNAME,NORMALIZEDUSERNAME,EMAIL,NORMALIZEDEMAIL,EMAILCONFIRMED,PASSWORDHASH,PHONENUMBER,PHONENUMBERCONFIRMED,TWOFACTORENABLED,CREATED) values (41,'m@m.com','moammed gafar','moammed gaffar','M@M.COM','m@m.com','M@M.COM','false','AQAAAAEAACcQAAAAEN8GgjlJ8IJgYNI2tJyOE09eFX8DxR47T3mmHfmacddvdIdTbQGWBHRGcAEN8PZ5+A==','123421231','false','false',to_date('15-OCT-23','DD-MON-RR'));
Insert into MOHAMMED.SITEUSER (ID,USERNAME,FORENAME,SURNAME,NORMALIZEDUSERNAME,EMAIL,NORMALIZEDEMAIL,EMAILCONFIRMED,PASSWORDHASH,PHONENUMBER,PHONENUMBERCONFIRMED,TWOFACTORENABLED,CREATED) values (83,'a@a.com','a','a','A@A.COM','a@a.com','A@A.COM','false','AQAAAAEAACcQAAAAEDkK+xBQX+BfO1Z0N06uaQGtwZJeoQ1xcbOGOoPnpC6NLey0vT2mdDLhHXtumTvT2A==','7777','false','false',to_date('30-OCT-23','DD-MON-RR'));
Insert into MOHAMMED.SITEUSER (ID,USERNAME,FORENAME,SURNAME,NORMALIZEDUSERNAME,EMAIL,NORMALIZEDEMAIL,EMAILCONFIRMED,PASSWORDHASH,PHONENUMBER,PHONENUMBERCONFIRMED,TWOFACTORENABLED,CREATED) values (101,'2@2.com','1','1','2@2.COM','2@2.com','2@2.COM','false','AQAAAAEAACcQAAAAEE6IcYP9CDZ4RODTRTDGcQ0mYjwfFjeAdFarWm3kXitCikB/LFir/wWVFcKqHnZdBg==','7812639','false','false',to_date('31-OCT-23','DD-MON-RR'));
REM INSERTING into MOHAMMED.SITEUSERROLE
SET DEFINE OFF;
Insert into MOHAMMED.SITEUSERROLE (USERID,ROLEID) values (101,0);
Insert into MOHAMMED.SITEUSERROLE (USERID,ROLEID) values (41,21);
Insert into MOHAMMED.SITEUSERROLE (USERID,ROLEID) values (83,41);
--------------------------------------------------------
--  DDL for Index BUILDING_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."BUILDING_PK" ON "MOHAMMED"."BUILDING" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index COLLAGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."COLLAGES_PK" ON "MOHAMMED"."COLLAGES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HALLS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."HALLS_PK" ON "MOHAMMED"."HALLS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index RESERVATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."RESERVATIONS_PK" ON "MOHAMMED"."RESERVATIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEROLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEROLE_PK" ON "MOHAMMED"."SITEROLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEUSERROLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEUSERROLE_PK" ON "MOHAMMED"."SITEUSERROLE" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEUSER_PK" ON "MOHAMMED"."SITEUSER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BUILDING_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."BUILDING_PK" ON "MOHAMMED"."BUILDING" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index COLLAGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."COLLAGES_PK" ON "MOHAMMED"."COLLAGES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HALLS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."HALLS_PK" ON "MOHAMMED"."HALLS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index RESERVATIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."RESERVATIONS_PK" ON "MOHAMMED"."RESERVATIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEROLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEROLE_PK" ON "MOHAMMED"."SITEROLE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEUSER_PK" ON "MOHAMMED"."SITEUSER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SITEUSERROLE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MOHAMMED"."SITEUSERROLE_PK" ON "MOHAMMED"."SITEUSERROLE" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG1" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;



/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG2" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT BUILDING_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;



/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COLLAGES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."COLLAGES_TRG" 
BEFORE INSERT ON COLLAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT COLLAGES_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."COLLAGES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HALLS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."HALLS_TRG" 
BEFORE INSERT ON HALLS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT HALLS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "MOHAMMED"."HALLS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERMISSIONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."PERMISSIONS_TRG" 
BEFORE INSERT ON PERMISSIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT PERMISSIONS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."PERMISSIONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RESERVATIONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."RESERVATIONS_TRG" 
BEFORE INSERT ON RESERVATIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT RESERVATIONS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "MOHAMMED"."RESERVATIONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROLEPERMISSION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."ROLEPERMISSION_TRG" 
BEFORE INSERT ON ROLEPERMISSION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ROLEPERMISSION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."ROLEPERMISSION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEROLE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEROLE_TRG" 
BEFORE INSERT ON SITEROLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT SITEROLE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;




/
ALTER TRIGGER "MOHAMMED"."SITEROLE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEUSER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEUSER_TRG" 
BEFORE INSERT ON SITEUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."SITEUSER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEUSER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEUSER_TRG1" 
BEFORE INSERT ON SITEUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT SITEUSER_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."SITEUSER_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG1" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;



/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BUILDING_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."BUILDING_TRG2" 
BEFORE INSERT ON BUILDING 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT BUILDING_SEQ2.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;



/
ALTER TRIGGER "MOHAMMED"."BUILDING_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COLLAGES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."COLLAGES_TRG" 
BEFORE INSERT ON COLLAGES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT COLLAGES_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."COLLAGES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HALLS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."HALLS_TRG" 
BEFORE INSERT ON HALLS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT HALLS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "MOHAMMED"."HALLS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERMISSIONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."PERMISSIONS_TRG" 
BEFORE INSERT ON PERMISSIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT PERMISSIONS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."PERMISSIONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RESERVATIONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."RESERVATIONS_TRG" 
BEFORE INSERT ON RESERVATIONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT RESERVATIONS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;


/
ALTER TRIGGER "MOHAMMED"."RESERVATIONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROLEPERMISSION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."ROLEPERMISSION_TRG" 
BEFORE INSERT ON ROLEPERMISSION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT ROLEPERMISSION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."ROLEPERMISSION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEROLE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEROLE_TRG" 
BEFORE INSERT ON SITEROLE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT SITEROLE_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;




/
ALTER TRIGGER "MOHAMMED"."SITEROLE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEUSER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEUSER_TRG" 
BEFORE INSERT ON SITEUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."SITEUSER_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SITEUSER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MOHAMMED"."SITEUSER_TRG1" 
BEFORE INSERT ON SITEUSER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT SITEUSER_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;








/
ALTER TRIGGER "MOHAMMED"."SITEUSER_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Procedure BUILDING_CREATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."BUILDING_CREATE" (
BName NVARCHAR2,
BNumber NUMBER,
BCollege_Id NUMBER ,

qres  out NVARCHAR2 
)
AS 
        ident number ;

BEGIN
        SELECT COUNT (*)
        INTO ident FROM BUILDING WHERE (college_id = BCollege_ID AND building_number = BNumber );

        IF        ident = 0
        THEN
                  INSERT INTO building( name , building_number , college_id ) VALUES( BName, BNumber, BCollege_Id);
                   qres := 'success';
        ELSE
                    qres := 'fail';
        END IF;

END BUILDING_CREATE;







/
--------------------------------------------------------
--  DDL for Procedure BUILDING_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."BUILDING_DELETE" 
(B_Id IN number, qres OUT VARCHAR2)
AS
        chvalue number := 0 ;
BEGIN
  SELECT COUNT (*) INTO chvalue FROM BuILDING WHERE (ID = B_Id);
  
        IF chvalue > 0 THEN 
                DELETE FROM BUILDING WHERE (ID = B_ID);
        qres := 'success';
        ELSE 
        qres := 'fail';
        END IF ;
        
END;


/
--------------------------------------------------------
--  DDL for Procedure BUILDING_GET_BYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."BUILDING_GET_BYID" 
(B_Id IN number,res OUT SYS_REFCURSOR)
AS
BEGIN
  OPEN res FOR SELECT Building.ID AS ID
                     ,Building.NAME AS buldingName
                     ,Building.BUILDING_NUMBER AS buldingnumber
                     ,Collages.NAME AS BuldingCollageName 
                     ,Collages.ID AS BuldingCollageNumber
		From Building Join Collages 
			On (Building.COLLEGE_ID = Collages.ID)
			WHERE (Building.Id = B_Id);
END;


/
--------------------------------------------------------
--  DDL for Procedure BUILDING_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."BUILDING_UPDATE" 
(B_Id IN number, B_Name IN VARCHAR2, B_Number IN VARCHAR2, College_Id IN VARCHAR2,qres OUT VARCHAR2)
AS
        chvalue number := 0 ; 
BEGIN
       SELECT COUNT(*) INTO chvalue FROM BUILDING WHERE (BUILDING_NUMBER = B_Number AND COLLEGE_ID = College_Id) AND (ID <> B_Id) ;
       
       If chvalue = 0 THEN 
        UPDATE BUILDING SET
                Name = B_Name ,
                BUILDING_NUMBER = B_Number,
                COLLEGE_ID = College_Id
        WHERE 
                ID = B_Id ;
                qres := 'success';
       ELSE 
                qres := 'fail';
       END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure COLLAGES_CREATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."COLLAGES_CREATE" 
(Col_Name IN VARCHAR2, Col_Code IN VARCHAR2,qres OUT NVARCHAR2)
AS
      chvalue number := 0 ;
BEGIN
        SELECT COUNT (*) INTO chvalue FROM COLLAGES WHERE(Code = Col_Code);
        
        IF chvalue = 0 THEN 
                INSERT INTO COLLAGES (Name , Code)
                        VALUES (Col_Name , Col_Code);
           qres := 'success';
        ELSE
           qres := 'fail';
        END IF;
        
END;



/
--------------------------------------------------------
--  DDL for Procedure COLLAGES_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."COLLAGES_DELETE" 
(Col_ID IN number,qres OUT VARCHAR2)
AS
        chvalue number :=0;
BEGIN
        SELECT COUNT (*) INTO chvalue FROM BUILDING WHERE (BUILDING.COLLEGE_ID = Col_ID);
        IF chvalue = 0 THEN 
                DELETE FROM COLLAGES 
                        WHERE ID = Col_ID ;
                qres := 'success';
        ELSE
                qres := 'fail';
        END IF ;
        
  DBMS_OUTPUT.PUT_LINE('Sample output');
END;



/
--------------------------------------------------------
--  DDL for Procedure COLLAGES_GETALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."COLLAGES_GETALL" 
(res out SYS_REFCURSOR)
AS
BEGIN
         OPEN RES FOR SELECT ID,NAME,Code FROM Collages ;
END;









/
--------------------------------------------------------
--  DDL for Procedure COLLAGES_GET_BYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."COLLAGES_GET_BYID" 
(Col_ID IN number,res OUT SYS_REFCURSOR)
AS
BEGIN
  
  OPEN res FOR SELECT Collages.ID,Collages.Name,Collages.Code FROM Collages
        WHERE 
        Collages.ID = Col_ID ;
  
END;



/
--------------------------------------------------------
--  DDL for Procedure COLLAGES_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."COLLAGES_UPDATE" 
(Col_ID IN number, Col_Name IN VARCHAR2, Col_Code IN number,qres OUT VARCHAR2)
AS
        chvalue number := 0;
BEGIN
        SELECT COUNT (*) INTO chvalue FROM COLLAGES WHERE (CODE = Col_Code                                                            
                                                           AND Name = Col_Name);
        
        IF chvalue = 0 THEN 
                UPDATE Collages SET
			Name = Col_Name
			,Code = Col_code
		WHERE
			ID = Col_ID ;
                qres := 'success';
        Else     
                qres := 'fail';
        END IF;
END;



/
--------------------------------------------------------
--  DDL for Procedure DASHBORD_ACTIVE_HALLS_NUMBER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."DASHBORD_ACTIVE_HALLS_NUMBER" 
(res OUT SYS_REFCURSOR)
AS

BEGIN
  OPEN res FOR SELECT DISTINCT(COUNT(HALL_ID)) AS Active_Halls FROM Reservations
		WHERE
			TIME_START < CURRENT_DATE
		AND
			TIME_END > CURRENT_DATE
		AND	
			 RESERVATION_DATE = trunc(CURRENT_DATE)  ;
END;


/
--------------------------------------------------------
--  DDL for Procedure DASHBORD_HALLS_NUMBER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."DASHBORD_HALLS_NUMBER" ( res OUT SYS_REFCURSOR)

AS
BEGIN
        OPEN res FOR SELECT COUNT(id) as HallsNumer from Halls ;
END;


/
--------------------------------------------------------
--  DDL for Procedure DASHBORD_LASTRESERVATION_TODAY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."DASHBORD_LASTRESERVATION_TODAY" (res OUT SYS_REFCURSOR)

AS
BEGIN
  OPEN res FOR SELECT MAX(Time_End) AS MaxTime from Reservations
	WHERE TRUNC(RESERVATION_DATE) = TRUNC(CURRENT_DATE) ;
END;


/
--------------------------------------------------------
--  DDL for Procedure DASHBORD_TODAY_RESERVATIONS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."DASHBORD_TODAY_RESERVATIONS" ( 
  res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR SELECT  COUNT(DISTINCT(ID))  AS total from RESERVATIONS WHERE RESERVATION_DATE = trunc(CURRENT_DATE);

END DASHBORD_TODAY_RESERVATIONS;









/
--------------------------------------------------------
--  DDL for Procedure GETHALLS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."GETHALLS" 
(
  --ID IN NUMBER ,
  
  res out SYS_REFCURSOR
) AS 
BEGIN
    OPEN res FOR SELECT * FROM halls ;

END GETHALLS;









/
--------------------------------------------------------
--  DDL for Procedure GETHALLSBYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."GETHALLSBYID" 
(
  hallid IN NUMBER ,
  
  res out SYS_REFCURSOR
) AS 
BEGIN
    OPEN res FOR SELECT * FROM halls Where id = hallid;

END gethallsbyid;









/
--------------------------------------------------------
--  DDL for Procedure GET_COLLEGE_BUILDING
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."GET_COLLEGE_BUILDING" 
   (res out SYS_REFCURSOR)
AS
BEGIN
  OPEN RES FOR 
        SELECT Building.ID,Building.Name AS buldingName ,Building.building_Number AS buldingnumber,Collages.Name AS BuldingCollageName
		FROM Building join Collages
		On (Building.College_Id = Collages.ID) ;
END GET_COLLEGE_BUILDING;









/
--------------------------------------------------------
--  DDL for Procedure GET_HALL_BUILDING
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."GET_HALL_BUILDING" 
(
    res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR 
    SELECT halls.ID AS Id , halls.NAME AS HallName ,halls.HALL_NUMBER AS HallNumber ,
        Building.Id AS Building_ID, Building.Name AS BuildingName ,Building.BUILDING_NUMBER AS BuildingNumber
	FROM halls JOIN Building
		ON (halls.Building_ID = Building.ID);

END GET_HALL_BUILDING;







/
--------------------------------------------------------
--  DDL for Procedure HALLS_CREATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."HALLS_CREATE" 
(H_ID IN number, HallName IN VARCHAR2, HallNumber IN number, Building_Id IN number,qres OUT VARCHAR2)
AS
        chvalue number := 0 ;
BEGIN
  
        SELECT COUNT (*) INTO chvalue FROM HALLS WHERE (HALL_NUMBER = HallNumber) AND (Building_ID = Building_Id);
        

        IF chvalue = 0 THEN 
                INSERT INTO Halls(Name,HALL_NUMBER,Building_ID) 
                        VALUES 
                        (HallName,HallNumber,Building_Id);
        qres := 'success';
        
        ELSE 
        qres := 'fail';
        END IF ;

END;


/
--------------------------------------------------------
--  DDL for Procedure HALLS_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."HALLS_DELETE" 
(H_ID IN number, qres OUT VARCHAR2)
AS
        chvalue number := 0 ;
BEGIN
        SELECT COUNT (*) INTO chvalue FROM RESERVATIONS WHERE (HAll_Id = H_id);
        
        IF chvalue = 0 THEN 
                DELETE FROM Halls
			WHERE
			(
				ID = H_ID
			);
                qres := 'success';
        ELSE 
                qres := 'fail';
        END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure HALLS_GETBYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."HALLS_GETBYID" 
(Hall_Id IN number,res OUT SYS_REFCURSOR)
AS
BEGIN
  OPEN res FOR SELECT * FROM HAllS WHERE (ID = HAll_Id);
END;


/
--------------------------------------------------------
--  DDL for Procedure HALLS_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."HALLS_UPDATE" 
(H_ID IN number, HallName IN VARCHAR2, HallNumber IN number, Building_Id IN number,qres OUT VARCHAR2)
AS
        chvalue number := 0 ;
BEGIN
        SELECT COUNt (*) INTO chvalue FROM HALLS WHERE (Hall_Number = HallNumber AND BUILDING_ID = Building_Id AND Name = HallName) ;
        
        IF chvalue = 0 THEN 
                UPDATE Halls 
		SET 
			 Name =	 HallName
			,Hall_Number = HallNumber
			,Building_ID =  Building_Id
		WHERE 
			Halls.ID = H_ID;
                qres := 'success';
        ELSE
                qres := 'fail';
        END IF;
END;


/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_ADDUSERTOROLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_ADDUSERTOROLE" (
  "U_ID" IN NUMBER, 
  "R_ID" IN NUMBER) 
  
  IS
       VarRowNum  NUMBER := 0 ;
BEGIN 
       SELECT COUNT("ROLEID")

       INTO   VarRowNum

	   FROM   SiteUserRole

	  WHERE  UserId = "U_ID" AND RoleId = "R_ID" ;

       IF VarRowNum = 0 THEN
         INSERT INTO SiteUserRole
			(UserId, RoleId	)
			VALUES
			("U_ID","R_ID") ;

       END IF;
END;








/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_FINDBYEMAIL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_FINDBYEMAIL" 
(
  NORUSEREMAIL IN VARCHAR2 ,
  res OUT SYS_REFCURSOR
) AS 
BEGIN

    OPEN res FOR  SELECT * FROM SiteUser
    WHERE NormalizedEmail = NORUSEREMAIL;
END IDENTITY_FINDBYEMAIL;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_FINDBYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_FINDBYID" 
(
  U_ID IN NUMBER,
  res out SYS_REFCURSOR
) AS 
BEGIN
    OPEN res FOR 
        SELECT * FROM SiteUser
        WHERE Id = U_ID;
END IDENTITY_FINDBYID;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_FINDBYNAME
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_FINDBYNAME" 
(
  normalizedname in varchar2 ,
  res out SYS_REFCURSOR
) as 
begin
        OPEN res FOR 
        SELECT * FROM SiteUser
            WHERE NormalizedUserName = normalizedname AND ROWNUM = 1;
end identity_findbyname;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_FINDROLEBYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_FINDROLEBYID" 
(
  R_ID IN NUMBER,
  res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR 
    SELECT  *  FROM SiteRole
    WHERE Id = R_ID;

END IDENTITY_FINDROLEBYID;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_FINDROLEBYNAME
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_FINDROLEBYNAME" 
(
    NorRoleName IN VARCHAR2, 
    res OUT SYS_REFCURSOR
) AS 
BEGIN
        --null;
    OPEN res FOR SELECT  * FROM SiteRole  WHERE NormalizedName = NorRoleName;

END IDENTITY_FINDROLEBYNAME;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_GETALLROLES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_GETALLROLES" (res out SYS_REFCURSOR) AS

BEGIN
  OPEN RES FOR SELECT SiteRole.Id,SiteRole.Name,SiteRole.Description FROM SiteRole ;
END IDENTITY_GETALLROLES;









/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_GETALLUSERS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_GETALLUSERS" 
(
    res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR SELECT * FROM SiteUser;
END IDENTITY_GETALLUSERS;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_GETUSERROLES
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_GETUSERROLES" 
(
  U_ID IN NUMBER,
  res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR 
    SELECT r.NAME FROM SiteRole r 
    INNER JOIN SiteUserRole ur ON ur.ROLEID = r.Id 
    WHERE ur.USERID = U_ID  ;

END IDENTITY_GETUSERROLES;

/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_GETUSERROLESBYUSERID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_GETUSERROLESBYUSERID" 
( U_ID IN NUMBER, res out SYS_REFCURSOR) 
AS 
BEGIN
    OPEN res FOR SELECT r.Name FROM SiteRole r 
    INNER JOIN SiteUserRole ur ON ur.RoleId = r.Id 
    WHERE ur.UserId = U_ID ;
END IDENTITY_GETUSERROLESBYUSERID;

/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_INSERTROLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_INSERTROLE" 
(R_Name IN VARCHAR2, 
R_NormalizedName IN VARCHAR2, 
R_Description IN VARCHAR2, 
Created IN date)
AS
        chvalue number := 0; 
BEGIN
        SELECT COUNT (*) INTO chvalue FROM SiteRole WHERE (Name = R_Name) ;
        
       IF (chvalue = 0) THEN
         INSERT INTO SiteRole 
                (
                        Name, 
                        NormalizedName, 
                        Description,
                        Created
                )
                VALUES
                (
                        R_Name,
                        R_NormalizedName,
                        R_Description,
                        TO_DATE(Created)
                );
                
        END IF;
END;




/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_INSERTUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_INSERTUSER" 
(
  USERNAME IN VARCHAR2 
, NORMALIZEDUSERNAME IN VARCHAR2 
, FORENAME IN VARCHAR2 
, SURNAME IN VARCHAR2 
, EMAIL IN VARCHAR2 
, NORMALIZEDEMAIL IN VARCHAR2 
, EMAILCONFIRMED IN VARCHAR2 
, PASSWORDHASH IN VARCHAR2 
, PHONENUMBER IN VARCHAR2 
, PHONENUMBERCONFIRMED IN VARCHAR2 
, TWOFACTORENABLED IN VARCHAR2 
, CREATED IN DATE
, qres out VARCHAR2
) 
AS 
    a VARCHAR2(5) := '' ;
    b VARCHAR2(5) := '' ;
    c VARCHAR2(5) := '' ;
BEGIN
    if EMAILCONFIRMED = 0  then 
        a := 'false';
        else
        a := 'true';
    end if;

    if PHONENUMBERCONFIRMED = 0  then 
        b := 'false';
         else
        b := 'true';
    end if;

    if TWOFACTORENABLED = 0  then 
        c := 'false';
        else
        c := 'true';
    end if;

INSERT INTO SiteUser 
(
	UserName, 
    NormalizedUserName, 
    Email,
    NormalizedEmail, 
    EmailConfirmed,
    Forename,
    Surname,
    PasswordHash,
    PhoneNumber, 
    PhoneNumberConfirmed, 
    TwoFactorEnabled,
	Created
 )
 VALUES
 (
	Username,
	NormalizedUserName,
	Email,
	NormalizedEmail,
	a,
	Forename,
	Surname,
	PasswordHash,
	PhoneNumber,
	b,
	c,
	TO_DATE (Created)
 );
qres := 'success'; 

END IDENTITY_INSERTUSER;








/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_ISUSERINROLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_ISUSERINROLE" 
(
  R_ID IN NUMBER 
, U_ID IN NUMBER 
, res OUT SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR 
    SELECT COUNT(*) FROM SiteUserRole 
    WHERE UserId = R_ID 
    AND RoleId = U_ID;

END IDENTITY_ISUSERINROLE;








/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_UPDATEROLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_UPDATEROLE" 
(R_ID IN number,
 R_Name IN VARCHAR2,
 R_NormalizedName IN VARCHAR2,
 R_Description IN VARCHAR2,
 qres out VARCHAR2 )
AS
BEGIN
        
        UPDATE SiteRole SET

            Name = R_Name,
            NormalizedName = R_NormalizedName,
            Description = R_Description

        WHERE Id = R_ID;
        
        qres := 'successful';
END;





/
--------------------------------------------------------
--  DDL for Procedure IDENTITY_UPDATEUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."IDENTITY_UPDATEUSER" 
(
  U_ID IN NUMBER   
, U_USERNAME IN VARCHAR2 
, U_NORMALIZEDUSERNAME IN VARCHAR2 
, U_FORENAME IN VARCHAR2 
, U_SURNAME IN VARCHAR2 
, U_EMAIL IN VARCHAR2 
, U_NORMALIZEDEMAIL IN VARCHAR2 
, U_EMAILCONFIRMED IN VARCHAR2 
, U_PASSWORDHASH IN VARCHAR2 
, U_PHONENUMBER IN VARCHAR2 
, U_PHONENUMBERCONFIRMED IN VARCHAR2 
, U_TWOFACTORENABLED IN VARCHAR2 
, qres out NVARCHAR2
) AS
     
    a VARCHAR2(5) := '' ;
    b VARCHAR2(5) := '' ;
    c VARCHAR2(5) := '' ;
BEGIN
    if U_EMAILCONFIRMED = 0  then 
        a := 'false';
        else
        a := 'true';
    end if;

    if U_PHONENUMBERCONFIRMED = 0  then 
        b := 'false';
         else
        b := 'true';
    end if;

    if U_TWOFACTORENABLED = 0  then 
        c := 'false';
        else
        c := 'true';
    end if;

UPDATE SiteUser SET

        UserName = U_Username,
        NormalizedUserName = U_NormalizedUserName,
        Email = U_Email,
        NormalizedEmail = U_NormalizedEmail, 
        EmailConfirmed =a,
        Forename = U_Forename,
        Surname = U_Surname,
        PasswordHash = U_PasswordHash,
        PhoneNumber = U_PhoneNumber,
        PhoneNumberConfirmed = b,
        TwoFactorEnabled = c 

        WHERE Id = U_ID ;
        qres := 'success' ;

END IDENTITY_UPDATEUSER;







/
--------------------------------------------------------
--  DDL for Procedure PERMISSIONS_GETBYNAME
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSIONS_GETBYNAME" 
(
  PERMISSIONNAME IN VARCHAR2 ,
  res out SYS_REFCURSOR
) AS 
BEGIN
	OPEN res FOR SELECT * FROM Permissions WHERE (Permissions.Name = PERMISSIONNAME);
END PERMISSIONS_GETBYNAME;





/
--------------------------------------------------------
--  DDL for Procedure PERMISSION_GET_ALL_BY_ROLE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSION_GET_ALL_BY_ROLE" 
(
  ROLE_ID IN NUMBER,
  res out SYS_REFCURSOR
) AS 
BEGIN
		OPEN res FOR SELECT * FROM RolePermission WHERE (RoleID = ROLE_ID);
END PERMISSION_GET_ALL_BY_ROLE;





/
--------------------------------------------------------
--  DDL for Procedure PERMISSION_GET_BY_ID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSION_GET_BY_ID" 
(
  PERM_ID IN NUMBER
  , res out SYS_REFCURSOR
) AS 
BEGIN
  OPEN res FOR SELECT * FROM Permissions WHERE (ID = PERM_ID);

END PERMISSION_GET_BY_ID;





/
--------------------------------------------------------
--  DDL for Procedure PERMISSION_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSION_INSERT" 
(R_ID IN number, Perm_ID IN number)
AS
BEGIN
  INSERT INTO RolePermission (RoleID , PermissionID)
		VALUES (R_ID , Perm_ID) ;
END;




/
--------------------------------------------------------
--  DDL for Procedure PERMISSION_RESET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSION_RESET" 
(R_ID IN number)
AS

BEGIN
   DELETE FROM RolePermission WHERE (RoleID = R_ID);
END;




/
--------------------------------------------------------
--  DDL for Procedure PERMISSION_USERHASPERMISSION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."PERMISSION_USERHASPERMISSION" 
(
  ROLE_ID IN NUMBER 
, PERMISSION_ID IN NUMBER 
, res out SYS_REFCURSOR
) AS 
BEGIN
  	OPEn res FOR SELECT * FROM RolePermission 
    WHERE(RoleID =ROLE_ID AND PermissionID =PERMISSION_ID);
END PERMISSION_USERHASPERMISSION;





/
--------------------------------------------------------
--  DDL for Procedure RESERVATIONS_CHECK_DUBLICATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATIONS_CHECK_DUBLICATE" 
(R_Name IN VARCHAR2, R_Hall_Id IN number, R_Date IN date, R_Time_Start IN DATE, R_Time_End IN DATE, R_User_Id IN number,qres OUT Varchar2)
AS
 chdoublecate number :=0 ;
 chtiming     number :=0 ;
BEGIN

SELECT COUNT(*) INTO chdoublecate FROM RESERVATIONS WHERE (HALL_ID = R_Hall_Id) AND (RESERVATION_DATE = TRUNC(TO_DATE(R_Date,'yyyy/MM/dd HH24:MI:ss'))) 
                                                 
         AND    (R_Time_Start <= Time_Start  AND  R_Time_Start >=Time_End) 
         OR 
                ( R_Time_End <= Time_Start  AND  R_Time_End  >= Time_End ) ; 

        IF chdoublecate > 0 THEN 
                qres := 'dublicate';
        END IF;       
        
END;
/* Procedure body */


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_CHECK_DOBICATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_CHECK_DOBICATE" 
(R_Id IN NUMBER ,R_Name IN VARCHAR2, R_Hall_Id IN number, R_Date IN date, R_Time_Start IN DATE, R_Time_End IN DATE, R_User_Id IN number, qres OUT Varchar2, R_Q_state IN VARCHAR2)
AS
 chdoublecate number :=0 ;
BEGIN
        IF (R_Q_state != 'update') THEN
                SELECT COUNT(*) INTO chdoublecate FROM RESERVATIONS WHERE (HALL_ID = R_Hall_Id) AND (RESERVATION_DATE =TO_DATE(R_Date) )
                                  AND ( R_Time_Start  >= TIME_START  AND R_Time_Start <= TIME_END )
                                  OR ( R_Time_END  >= TIME_START  AND R_Time_END <= TIME_END ) ; 
                
                IF chdoublecate = 0 THEN 
                        qres := 'true';
                ELSE
                        qres := 'flse';
                END IF;
        ELSE
                 SELECT COUNT(*) INTO chdoublecate FROM RESERVATIONS WHERE (  (HALL_ID = R_Hall_Id) AND (RESERVATION_DATE = TO_DATE(R_Date) )
                                  AND ( R_Time_Start  >= TIME_START  AND R_Time_Start <= TIME_END )
                                  OR ( R_Time_END  >= TIME_START  AND R_Time_END <= TIME_END ) ) AND ID != R_Id; 
                
                IF chdoublecate = 0  THEN 
                        qres := 'true';
                ELSE
                        qres := 'flse';
                END IF;
        END IF;
END;
/* Procedure body */


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_CREATEBYCONDITIONS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_CREATEBYCONDITIONS" 
(R_Name2 IN varchar2, R_Hall_Id2 IN number, R_Date2 IN date, R_Time_Start2 IN DATE, R_Time_End2 IN DATE, R_User_Id2 IN number,qres2 OUT Varchar2)
AS
 chtiming     number :=0 ;
BEGIN

        SELECT COUNT (*) INTO chtiming FROM RESERVATIONS WHERE (R_Time_Start2 > R_Time_End2 ) ;
        
        IF chtiming > 0 THEN 
                qres2 :='st>et';
        else
                INSERT INTO 
                        RESERVATIONS(Name,Hall_Id,RESERVATION_DATE,Time_Start,Time_End,User_Id)
                VALUES 
                        (R_Name2,R_Hall_Id2,R_Date2,R_Time_Start2,R_Time_End2,R_User_Id2);
                qres2 :='success';
        END IF;
        
END;


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_GETALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_GETALL" (res OUT SYS_REFCURSOR)

AS
BEGIN
        OPEN res FOR SELECT  RESERVATIONS.ID,RESERVATIONS.Name,RESERVATIONS.Hall_Id,RESERVATIONS.Time_Start AS Time_Start,
                               RESERVATIONS.Time_End AS Time_End,RESERVATION_DATE AS RESERVATION_DATE,RESERVATIONS.USER_ID 
                ,Halls.Name AS Hall_Name, SiteUser.Forename AS User_Name
                FROM RESERVATIONS 
                        join Halls on RESERVATIONS.Hall_Id = Halls.ID
                        join SiteUser on RESERVATIONS.User_Id = SiteUser.Id
                ORDER BY Time_Start;
END; 


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_GETBYID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_GETBYID" 
(R_ID IN number,res OUT SYS_REFCURSOR)
AS
BEGIN
  OPEN res FOR SELECT Reservations.ID,Reservations.Name,Reservations.Hall_Id,Reservations.Time_Start,Reservations.Time_End,Reservations.RESERVATION_DATE,Reservations.User_Id 
	,Halls.Name AS Hall_Name, SiteUser.Forename AS User_Name
	FROM Reservations 
		join Halls on Reservations.Hall_Id = Halls.ID
		join SiteUser on Reservations.User_Id = SiteUser.Id
	WHERE Reservations.ID = R_ID ;
END;


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_GETBYUSERID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_GETBYUSERID" 
(R_User_Id IN number , res OUT SYS_REFCURSOR)
AS
BEGIN
 OPEn res FOR SELECT Reservations.ID,Reservations.Name,Reservations.Hall_Id,Reservations.Time_Start,Reservations.Time_End,
                        Reservations.RESERVATION_DATE,Reservations.User_Id 
	,Halls.Name AS Hall_Name
	FROM Reservations join Halls on Reservations.Hall_Id = Halls.ID
	WHERE Reservations.User_Id = R_User_Id 
	ORDER BY Time_Start ;
END;


/
--------------------------------------------------------
--  DDL for Procedure RESERVATION_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."RESERVATION_UPDATE" 
(R_Id2 IN number , R_Name2 IN varchar2, R_Hall_Id2 IN number, R_Date2 IN date, R_Time_Start2 IN DATE, R_Time_End2 IN DATE, R_User_Id2 IN number,qres2 OUT Varchar2)
AS
 chtiming     number :=0 ;
BEGIN

        SELECT COUNT (*) INTO chtiming FROM RESERVATIONS WHERE (R_Time_Start2 > R_Time_End2 ) ;
        
        IF chtiming > 0 THEN 
                qres2 :='st>et';
        else
                UPDATE RESERVATIONS 
                SET
                 Name = R_Name2,
                 Hall_Id = R_Hall_Id2,
                 RESERVATION_DATE = R_Date2,
                 Time_Start = R_Time_Start2,
                 Time_End = R_Time_End2,
                 User_Id = R_User_Id2
                WHERE
                     ID = R_Id2 ; 
                     
                qres2 :='success';
        END IF;
        
END;


/
--------------------------------------------------------
--  DDL for Procedure TEST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MOHAMMED"."TEST" (res OUT SYS_REFCURSOR)

AS
        num integer := 0 ;
BEGIN
  OPEN res FOR SELECT *  FROM RESERVATIONS WHERE HALL_ID=3;
END;

/
--------------------------------------------------------
--  Constraints for Table BUILDING
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."BUILDING" ADD CONSTRAINT "BUILDING_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."BUILDING" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."BUILDING" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COLLAGES
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."COLLAGES" ADD CONSTRAINT "COLLAGES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."COLLAGES" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HALLS
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."HALLS" ADD CONSTRAINT "HALLS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."HALLS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PERMISSIONS
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."PERMISSIONS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RESERVATIONS
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."RESERVATIONS" ADD CONSTRAINT "RESERVATIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."RESERVATIONS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROLEPERMISSION
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."ROLEPERMISSION" MODIFY ("PERMISSIONID" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."ROLEPERMISSION" MODIFY ("ROLEID" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."ROLEPERMISSION" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SITEROLE
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."SITEROLE" ADD CONSTRAINT "SITEROLE_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."SITEROLE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SITEUSER
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."SITEUSER" ADD CONSTRAINT "SITEUSER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("PHONENUMBER" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("PASSWORDHASH" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("NORMALIZEDEMAIL" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("SURNAME" NOT NULL ENABLE);
  ALTER TABLE "MOHAMMED"."SITEUSER" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SITEUSERROLE
--------------------------------------------------------

  ALTER TABLE "MOHAMMED"."SITEUSERROLE" ADD CONSTRAINT "SITEUSERROLE_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MOHAMMED"."SITEUSERROLE" MODIFY ("USERID" NOT NULL ENABLE);
